#!/bin/bash
#
# rss          Startup script for rss daemon
#
# chkconfig: - 85 15
# description: TinyTinyRSS Update Service
# processname: rss
#
### BEGIN INIT INFO
# Provides: rss
# Required-Start: $local_fs $remote_fs $network $named
# Required-Stop: $local_fs $remote_fs $network
# Should-Start: mysqld
# Short-Description: start and stop rss
# Description: TinyTinyRSS Update Service
### END INIT INFO



### TODO




#!/bin/bash
#
# mams daemon script
#
# chkconfig: 345 20 80
# description: mams update daemon
# processname: mams

### BEGIN INIT INFO
# Provides: $mams
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Initscript for MaMS Daemon
# Description: Automatically starts MaMS when the system starts up.
#              Provide commands for manually starting and stopping MaMS.
### END INIT INFO

#
# Author: Florian Asche
#         <info@florian-asche.de>.

### Some Notes:
# RedHat checks for a lock file for your script in /var/lock/subsys/mams or it won't run your K* scripts.
# You will find a "touch" command below under "start to take care of this.
#
#
# You need to install redhat-lsb-core.x86_64
#
# On the above config command:
# $1 run levels for start links (35 = rc3.d and rc5.d)
# $2 start sequence  (14 = S14xxxx in the run levels listed in $1)
# $3 stop seqence    (94 = K94xxxx in all rcX.d's)
# Sequences all (S & K) start from 00 (K is not a "down counter")
#
# install run levels with the following command:
#      /sbin/chkconfig --add mams
#
# remove run levels with the following command (sometime necessary):
#      /sbin/chkconfig --del mams
#
# list with
#      /sbin/chkconfig --list mams   or
#      find /etc/rc.d -iname \*mams\* -print   or
#      find /etc/rc.d -iname \*mams\* -exec ls -al {} \;

# Source function library
. /etc/rc.d/init.d/functions

# Process name ( For display )
NAME=mams
# Daemon name, where is the actual executable
DAEMON=/var/www/mams/daemon.php
# pid file for the daemon
PIDFILE=/var/run/$NAME.pid
# user
USER=apache

# If the daemon is not there, then exit.
if [ ! -x $DAEMON ]
then
    echo $DAEMON doesnt exists!
    exit 5
fi

# For SELinux we need to use 'runuser' instead of 'su'
if [ -x /sbin/runuser ]
then
    SU=runuser
else
    SU=su
fi

# default result
script_result=0

# start
start(){
    DAEMON_START=$"Starting $NAME service: "

    if [ -e $PIDFILE ]
    then
        echo $"$NAME is already running as PID `cat $PIDFILE` (or the PID file is dead)."
        echo_failure
        echo
        exit 1
    else
        echo -n "$DAEMON_START"
        daemon --user=$USER --pidfile=$PIDFILE "$DAEMON > /dev/null 2>&1 &"

        PID=`ps aux|grep -vE 'grep|runuser|bash'|grep -w "$DAEMON"|awk '{print $2}'|head -n 1`
        if [ -z "$PID" ]
        then
            failure "$DAEMON_START"
            echo
            script_result=1
        else
            echo $PID > $PIDFILE
        fi

        sleep 2
        pid=`head -n 1 "$PIDFILE" 2>/dev/null`
        if [ "x$pid" != x ]
        then
            success "$DAEMON_START"
            touch /var/lock/subsys/$NAME
            echo
        else
            failure "$DAEMON_START"
            echo
            script_result=1
        fi
    fi
}

stop(){
    DAEMON_STOP=$"Stopping $NAME service: "

    if [ -e $PIDFILE ]
    then
        PID=`cat $PIDFILE`
        kill -HUP $PID 2>/dev/null
         
        status -p ${PIDFILE} $NAME > /dev/null 2>&1
        if [ $? -eq 1 ] 
        then
            rm -f $PIDFILE
            rm -f /var/lock/subsys/$NAME
            success "$DAEMON_STOP"
        else
            failure "$DAEMON_STOP"
            echo
            script_result=1
        fi
    else
        failure "$DAEMON_STOP"
        echo
    fi
}

restart(){
    stop
    start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p ${PIDFILE} $NAME
    script_result=$?
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart}" >&2
    exit 2
esac
exit $script_result
